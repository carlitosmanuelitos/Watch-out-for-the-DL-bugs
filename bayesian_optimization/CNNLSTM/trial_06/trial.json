{"trial_id": "06", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_conv_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_filters_0", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_kernel_size_0", "default": null, "conditions": [], "min_value": 1, "max_value": 5, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_activation_0", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "pool_size_0", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "reshape_size", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_lstm_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_units_0", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "lstm_dropout_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd", "rmsprop", "adagrad", "adadelta", "nadam", "ftrl"], "ordered": false}}, {"class_name": "Int", "config": {"name": "conv_filters_1", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "conv_kernel_size_1", "default": null, "conditions": [], "min_value": 1, "max_value": 5, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_activation_1", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "lstm_units_1", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "lstm_dropout_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_units_2", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "lstm_dropout_2", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}], "values": {"num_conv_layers": 4, "conv_filters_0": 224, "conv_kernel_size_0": 2, "conv_activation_0": "tanh", "pool_size_0": 3, "reshape_size": 64, "num_lstm_layers": 4, "lstm_units_0": 224, "lstm_dropout_0": 0.05, "optimizer": "rmsprop", "conv_filters_1": 224, "conv_kernel_size_1": 1, "conv_activation_1": "relu", "lstm_units_1": 96, "lstm_dropout_1": 0.15000000000000002, "lstm_units_2": 192, "lstm_dropout_2": 0.05}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras_tuner/src/engine/base_tuner.py\", line 273, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras_tuner/src/engine/base_tuner.py\", line 238, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras_tuner/src/engine/tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras_tuner/src/engine/tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras_tuner/src/engine/tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"/root/Time-Series-Forecasting-1/data_grid-search.py\", line 197, in build\n    model.add(Conv1D(\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras/src/dtensor/utils.py\", line 96, in _wrap_function\n    init_method(layer_instance, *args, **kwargs)\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras/src/layers/convolutional/conv1d.py\", line 156, in __init__\n    super().__init__(\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras/src/layers/convolutional/base_conv.py\", line 118, in __init__\n    super().__init__(\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/tensorflow/python/trackable/base.py\", line 204, in _method_wrapper\n    result = method(self, *args, **kwargs)\n  File \"/home/ova/miniconda3/envs/tf_gpu/lib/python3.9/site-packages/keras/src/engine/base_layer.py\", line 452, in __init__\n    batch_input_shape = (batch_size,) + tuple(kwargs[\"input_shape\"])\nTypeError: 'NoneType' object is not iterable\n"}